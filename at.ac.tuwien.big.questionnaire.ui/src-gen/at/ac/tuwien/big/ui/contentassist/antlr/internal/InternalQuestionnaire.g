/*
* generated by Xtext
*/
grammar InternalQuestionnaire;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package at.ac.tuwien.big.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.services.QuestionnaireGrammarAccess;

}

@parser::members {
 
 	private QuestionnaireGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QuestionnaireGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire 
:
{ before(grammarAccess.getQuestionnaireRule()); }
	 ruleQuestionnaire
{ after(grammarAccess.getQuestionnaireRule()); } 
	 EOF 
;

// Rule Questionnaire
ruleQuestionnaire
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup()); }
(rule__Questionnaire__Group__0)
{ after(grammarAccess.getQuestionnaireAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup 
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getAlternatives()); }
(rule__Question__Alternatives)
{ after(grammarAccess.getQuestionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpenQuestion
entryRuleOpenQuestion 
:
{ before(grammarAccess.getOpenQuestionRule()); }
	 ruleOpenQuestion
{ after(grammarAccess.getOpenQuestionRule()); } 
	 EOF 
;

// Rule OpenQuestion
ruleOpenQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenQuestionAccess().getGroup()); }
(rule__OpenQuestion__Group__0)
{ after(grammarAccess.getOpenQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosedQuestion
entryRuleClosedQuestion 
:
{ before(grammarAccess.getClosedQuestionRule()); }
	 ruleClosedQuestion
{ after(grammarAccess.getClosedQuestionRule()); } 
	 EOF 
;

// Rule ClosedQuestion
ruleClosedQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosedQuestionAccess().getGroup()); }
(rule__ClosedQuestion__Group__0)
{ after(grammarAccess.getClosedQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLikertQuestion
entryRuleLikertQuestion 
:
{ before(grammarAccess.getLikertQuestionRule()); }
	 ruleLikertQuestion
{ after(grammarAccess.getLikertQuestionRule()); } 
	 EOF 
;

// Rule LikertQuestion
ruleLikertQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLikertQuestionAccess().getGroup()); }
(rule__LikertQuestion__Group__0)
{ after(grammarAccess.getLikertQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnswer
entryRuleAnswer 
:
{ before(grammarAccess.getAnswerRule()); }
	 ruleAnswer
{ after(grammarAccess.getAnswerRule()); } 
	 EOF 
;

// Rule Answer
ruleAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnswerAccess().getGroup()); }
(rule__Answer__Group__0)
{ after(grammarAccess.getAnswerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleAnswer
entryRuleSimpleAnswer 
:
{ before(grammarAccess.getSimpleAnswerRule()); }
	 ruleSimpleAnswer
{ after(grammarAccess.getSimpleAnswerRule()); } 
	 EOF 
;

// Rule SimpleAnswer
ruleSimpleAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleAnswerAccess().getNameAssignment()); }
(rule__SimpleAnswer__NameAssignment)
{ after(grammarAccess.getSimpleAnswerAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputAnswer
entryRuleInputAnswer 
:
{ before(grammarAccess.getInputAnswerRule()); }
	 ruleInputAnswer
{ after(grammarAccess.getInputAnswerRule()); } 
	 EOF 
;

// Rule InputAnswer
ruleInputAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAnswerAccess().getGroup()); }
(rule__InputAnswer__Group__0)
{ after(grammarAccess.getInputAnswerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnablesQuestion
entryRuleEnablesQuestion 
:
{ before(grammarAccess.getEnablesQuestionRule()); }
	 ruleEnablesQuestion
{ after(grammarAccess.getEnablesQuestionRule()); } 
	 EOF 
;

// Rule EnablesQuestion
ruleEnablesQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnablesQuestionAccess().getGroup()); }
(rule__EnablesQuestion__Group__0)
{ after(grammarAccess.getEnablesQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSINT
entryRuleSINT 
:
{ before(grammarAccess.getSINTRule()); }
	 ruleSINT
{ after(grammarAccess.getSINTRule()); } 
	 EOF 
;

// Rule SINT
ruleSINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSINTAccess().getGroup()); }
(rule__SINT__Group__0)
{ after(grammarAccess.getSINTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Question__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getOpenQuestionParserRuleCall_0()); }
	ruleOpenQuestion
{ after(grammarAccess.getQuestionAccess().getOpenQuestionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getClosedQuestionParserRuleCall_1()); }
	ruleClosedQuestion
{ after(grammarAccess.getQuestionAccess().getClosedQuestionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getLikertQuestionParserRuleCall_2()); }
	ruleLikertQuestion
{ after(grammarAccess.getQuestionAccess().getLikertQuestionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenQuestion__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenQuestionAccess().getMandatoryKeyword_0_0()); }

	'mandatory' 

{ after(grammarAccess.getOpenQuestionAccess().getMandatoryKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getOpenQuestionAccess().getMultilineKeyword_0_1()); }

	'multiline' 

{ after(grammarAccess.getOpenQuestionAccess().getMultilineKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getSingleAnswerKeyword_1_0()); }

	'single answer' 

{ after(grammarAccess.getClosedQuestionAccess().getSingleAnswerKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getClosedQuestionAccess().getMultipleAnswersKeyword_1_1()); }

	'multiple answers' 

{ after(grammarAccess.getClosedQuestionAccess().getMultipleAnswersKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getSimpleAnswerParserRuleCall_0_0()); }
	ruleSimpleAnswer
{ after(grammarAccess.getAnswerAccess().getSimpleAnswerParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAnswerAccess().getInputAnswerParserRuleCall_0_1()); }
	ruleInputAnswer
{ after(grammarAccess.getAnswerAccess().getInputAnswerParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Questionnaire__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__0__Impl
	rule__Questionnaire__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }

	'questionnaire' 

{ after(grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__1__Impl
	rule__Questionnaire__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
(rule__Questionnaire__NameAssignment_1)
{ after(grammarAccess.getQuestionnaireAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__2__Impl
	rule__Questionnaire__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getQuestionnaireAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__3__Impl
	rule__Questionnaire__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroupsAssignment_3()); }
(rule__Questionnaire__GroupsAssignment_3)
{ after(grammarAccess.getQuestionnaireAccess().getGroupsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__4__Impl
	rule__Questionnaire__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroup_4()); }
(rule__Questionnaire__Group_4__0)*
{ after(grammarAccess.getQuestionnaireAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getQuestionnaireAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Questionnaire__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_4__0__Impl
	rule__Questionnaire__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getQuestionnaireAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Questionnaire__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Questionnaire__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroupsAssignment_4_1()); }
(rule__Questionnaire__GroupsAssignment_4_1)
{ after(grammarAccess.getQuestionnaireAccess().getGroupsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameAssignment_1()); }
(rule__Group__NameAssignment_1)
{ after(grammarAccess.getGroupAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getGroupAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getQuestionsAssignment_3()); }
(rule__Group__QuestionsAssignment_3)
{ after(grammarAccess.getGroupAccess().getQuestionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroup_4()); }
(rule__Group__Group_4__0)*
{ after(grammarAccess.getGroupAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getGroupAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Group__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_4__0__Impl
	rule__Group__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getGroupAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getQuestionsAssignment_4_1()); }
(rule__Group__QuestionsAssignment_4_1)
{ after(grammarAccess.getGroupAccess().getQuestionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpenQuestion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenQuestion__Group__0__Impl
	rule__OpenQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenQuestion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenQuestionAccess().getAlternatives_0()); }
(rule__OpenQuestion__Alternatives_0)?
{ after(grammarAccess.getOpenQuestionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenQuestion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenQuestion__Group__1__Impl
	rule__OpenQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenQuestion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenQuestionAccess().getOpenQuestionKeyword_1()); }

	'open question' 

{ after(grammarAccess.getOpenQuestionAccess().getOpenQuestionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenQuestion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenQuestion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenQuestion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenQuestionAccess().getNameAssignment_2()); }
(rule__OpenQuestion__NameAssignment_2)
{ after(grammarAccess.getOpenQuestionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClosedQuestion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__0__Impl
	rule__ClosedQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getClosedQuestionAllowingKeyword_0()); }

	'closed question allowing' 

{ after(grammarAccess.getClosedQuestionAccess().getClosedQuestionAllowingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__1__Impl
	rule__ClosedQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAlternatives_1()); }
(rule__ClosedQuestion__Alternatives_1)
{ after(grammarAccess.getClosedQuestionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__2__Impl
	rule__ClosedQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getNameAssignment_2()); }
(rule__ClosedQuestion__NameAssignment_2)
{ after(grammarAccess.getClosedQuestionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__3__Impl
	rule__ClosedQuestion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAnswersKeyword_3()); }

	'answers' 

{ after(grammarAccess.getClosedQuestionAccess().getAnswersKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__4__Impl
	rule__ClosedQuestion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getLeftSquareBracketKeyword_4()); }

	'[' 

{ after(grammarAccess.getClosedQuestionAccess().getLeftSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__5__Impl
	rule__ClosedQuestion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAnswersAssignment_5()); }
(rule__ClosedQuestion__AnswersAssignment_5)
{ after(grammarAccess.getClosedQuestionAccess().getAnswersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__6__Impl
	rule__ClosedQuestion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getGroup_6()); }
(rule__ClosedQuestion__Group_6__0)*
{ after(grammarAccess.getClosedQuestionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__7__Impl
	rule__ClosedQuestion__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getClosedQuestionAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getGroup_8()); }
(rule__ClosedQuestion__Group_8__0)?
{ after(grammarAccess.getClosedQuestionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ClosedQuestion__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group_6__0__Impl
	rule__ClosedQuestion__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getClosedQuestionAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAnswersAssignment_6_1()); }
(rule__ClosedQuestion__AnswersAssignment_6_1)
{ after(grammarAccess.getClosedQuestionAccess().getAnswersAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClosedQuestion__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group_8__0__Impl
	rule__ClosedQuestion__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getDefaultAnswerIsKeyword_8_0()); }

	'default answer is' 

{ after(grammarAccess.getClosedQuestionAccess().getDefaultAnswerIsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosedQuestion__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosedQuestion__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getDefaultAssignment_8_1()); }
(rule__ClosedQuestion__DefaultAssignment_8_1)
{ after(grammarAccess.getClosedQuestionAccess().getDefaultAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LikertQuestion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__0__Impl
	rule__LikertQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getLikertQuestionKeyword_0()); }

	'likert question' 

{ after(grammarAccess.getLikertQuestionAccess().getLikertQuestionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__1__Impl
	rule__LikertQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getNameAssignment_1()); }
(rule__LikertQuestion__NameAssignment_1)
{ after(grammarAccess.getLikertQuestionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__2__Impl
	rule__LikertQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getLikertQuestionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__3__Impl
	rule__LikertQuestion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getFromAssignment_3()); }
(rule__LikertQuestion__FromAssignment_3)
{ after(grammarAccess.getLikertQuestionAccess().getFromAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__4__Impl
	rule__LikertQuestion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getFullStopFullStopKeyword_4()); }

	'..' 

{ after(grammarAccess.getLikertQuestionAccess().getFullStopFullStopKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__5__Impl
	rule__LikertQuestion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getToAssignment_5()); }
(rule__LikertQuestion__ToAssignment_5)
{ after(grammarAccess.getLikertQuestionAccess().getToAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LikertQuestion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LikertQuestion__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getLikertQuestionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Answer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__0__Impl
	rule__Answer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getAlternatives_0()); }
(rule__Answer__Alternatives_0)
{ after(grammarAccess.getAnswerAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getEnablesAssignment_1()); }
(rule__Answer__EnablesAssignment_1)?
{ after(grammarAccess.getAnswerAccess().getEnablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputAnswer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputAnswer__Group__0__Impl
	rule__InputAnswer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputAnswer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAnswerAccess().getNameAssignment_0()); }
(rule__InputAnswer__NameAssignment_0)
{ after(grammarAccess.getInputAnswerAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputAnswer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputAnswer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputAnswer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAnswerAccess().getFullStopFullStopFullStopKeyword_1()); }

	'...' 

{ after(grammarAccess.getInputAnswerAccess().getFullStopFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnablesQuestion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnablesQuestion__Group__0__Impl
	rule__EnablesQuestion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnablesQuestion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnablesQuestionAccess().getEnablesQuestionKeyword_0()); }

	'enables question' 

{ after(grammarAccess.getEnablesQuestionAccess().getEnablesQuestionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnablesQuestion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnablesQuestion__Group__1__Impl
	rule__EnablesQuestion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnablesQuestion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnablesQuestionAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getEnablesQuestionAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnablesQuestion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnablesQuestion__Group__2__Impl
	rule__EnablesQuestion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnablesQuestion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnablesQuestionAccess().getQuestionAssignment_2()); }
(rule__EnablesQuestion__QuestionAssignment_2)
{ after(grammarAccess.getEnablesQuestionAccess().getQuestionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnablesQuestion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnablesQuestion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnablesQuestion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnablesQuestionAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getEnablesQuestionAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SINT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SINT__Group__0__Impl
	rule__SINT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SINT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSINTAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getSINTAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SINT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SINT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SINT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSINTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getSINTAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Questionnaire__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuestionnaireAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__GroupsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroupsGroupParserRuleCall_3_0()); }
	ruleGroup{ after(grammarAccess.getQuestionnaireAccess().getGroupsGroupParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Questionnaire__GroupsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionnaireAccess().getGroupsGroupParserRuleCall_4_1_0()); }
	ruleGroup{ after(grammarAccess.getQuestionnaireAccess().getGroupsGroupParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGroupAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__QuestionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__QuestionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_4_1_0()); }
	ruleQuestion{ after(grammarAccess.getGroupAccess().getQuestionsQuestionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenQuestion__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenQuestionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getOpenQuestionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getClosedQuestionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__AnswersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAnswersAnswerParserRuleCall_5_0()); }
	ruleAnswer{ after(grammarAccess.getClosedQuestionAccess().getAnswersAnswerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__AnswersAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getAnswersAnswerParserRuleCall_6_1_0()); }
	ruleAnswer{ after(grammarAccess.getClosedQuestionAccess().getAnswersAnswerParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosedQuestion__DefaultAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosedQuestionAccess().getDefaultAnswerCrossReference_8_1_0()); }
(
{ before(grammarAccess.getClosedQuestionAccess().getDefaultAnswerIDTerminalRuleCall_8_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClosedQuestionAccess().getDefaultAnswerIDTerminalRuleCall_8_1_0_1()); }
)
{ after(grammarAccess.getClosedQuestionAccess().getDefaultAnswerCrossReference_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getLikertQuestionAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__FromAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getFromSINTParserRuleCall_3_0()); }
	ruleSINT{ after(grammarAccess.getLikertQuestionAccess().getFromSINTParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LikertQuestion__ToAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLikertQuestionAccess().getToSINTParserRuleCall_5_0()); }
	ruleSINT{ after(grammarAccess.getLikertQuestionAccess().getToSINTParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__EnablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getEnablesEnablesQuestionParserRuleCall_1_0()); }
	ruleEnablesQuestion{ after(grammarAccess.getAnswerAccess().getEnablesEnablesQuestionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAnswer__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAnswerAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getSimpleAnswerAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputAnswer__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAnswerAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getInputAnswerAccess().getNameSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnablesQuestion__QuestionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnablesQuestionAccess().getQuestionQuestionCrossReference_2_0()); }
(
{ before(grammarAccess.getEnablesQuestionAccess().getQuestionQuestionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getEnablesQuestionAccess().getQuestionQuestionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getEnablesQuestionAccess().getQuestionQuestionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


